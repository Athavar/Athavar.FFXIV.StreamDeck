name: Build

# Put your personal access token in a repository secret named PAT for cross-repository access

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PUBLIC_NAME: FFXIV StreamDeck Integration
  SOLUTION_NAME: Athavar.FFXIV.StreamDeckPlugin
  PROJECT_DALAMUD: Athavar.FFXIV.StreamDeckPlugin
  PROJECT_STREAMDECK: one.athavar.ffxivdeck
  INTERNAL_NAME: Athavar.FFXIV.StreamDeckPlugin
  RELEASE_DALAMUD_DIR: src\Athavar.FFXIV.StreamDeckPlugin\bin\Release\net5.0-windows\Athavar.FFXIV.StreamDeckPlugin
  DIST_DIR: dist\
  PERSONAL_PLUGIN_REPO: Athavar/Athavar.FFXIV.DalaRepo

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Build Dalamud Plugin
        run: |
          dotnet restore -r win -v n
          dotnet build --configuration Release -v n src\${{ env.RELEASE_DALAMUD_DIR }}
          xcopy ${{ env.RELEASE_DALAMUD_DIR }} ${{ env.DIST_DIR }}
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true

      - name: Build & Distribution StreamerDeck
        run: |
          dotnet publish --configuration Release -r win-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishReadyToRun=true --self-contained true -v n -o Source\${{ env.PROJECT_STREAMDECK }}.sdPlugin src\${{ env.PROJECT_STREAMDECK }}
          tools\DistributionTool.exe -b -i Source\${{ env.PROJECT_STREAMDECK }}.sdPlugin -o ${{ env.DIST_DIR }}
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true

      - uses: actions/upload-artifact@v2
        with:
          name: PluginRepoZip
          path: |
            ${{ env.DIST_DIR }}
          if-no-files-found: error

  deploy:
    needs: build
    if: "contains(toJSON(github.event.commits.*.message), '[PUSH]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.PERSONAL_PLUGIN_REPO }}
          token: ${{ secrets.PAT }}
      - uses: actions/download-artifact@v2
        with:
          name: PluginRepoZip
          path: plugins/${{ env.INTERNAL_NAME }}
      - uses: EndBug/add-and-commit@v7
        with:
          add: --all
          branch: master
          author_name: GitHub Action
          author_email: github-actions[bot]@users.noreply.github.com
          message: Update ${{ env.INTERNAL_NAME }}